import 'package:dotted_border/dotted_border.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';
import 'package:provider/provider.dart';
import '../../utils/style.dart';
import '../../widgets/all.dart';
import '../../widgets/select_phone.dart';

class PresentTab extends StatefulWidget {
  const PresentTab({Key? key}) : super(key: key);

  @override
  State<PresentTab> createState() => _PresentTabState();
}

class _PresentTabState extends State<PresentTab>
    with FullscreenLoaderMixin<PresentTab> {
  final TextEditingController _certEmail = TextEditingController();
  final TextEditingController _certPhone = TextEditingController();
  final TextEditingController _additionalInfo = TextEditingController();
  final TextEditingController _yourEmail = TextEditingController();
  final TextEditingController _yourPhone = TextEditingController();
  final TextEditingController _cash = TextEditingController();

  final FocusNode _certEmailNode = FocusNode();
  final FocusNode _certPhoneNode = FocusNode();
  final FocusNode _additionalInfoNode = FocusNode();
  final FocusNode _yourEmailNode = FocusNode();
  final FocusNode _yourPhoneNode = FocusNode();
  final FocusNode _cashNode = FocusNode();

  @override
  void initState() {
    super.initState();
    _initProvider();
  }

  _initProvider() async {
    PresentProvider presentProvider = context.read<PresentProvider>();
    runWithLoader(() async {
      await presentProvider.init();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Stack(
      alignment: Alignment.bottomCenter,
      children: [
        SingleChildScrollView(
          child: Container(
            color: AppColor.primary,
            padding: const EdgeInsets.symmetric(horizontal: 16),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                const SizedBox(
                  height: 35,
                ),
                _title1(),
                const SizedBox(
                  height: 22,
                ),
                _title2(),
                const SizedBox(
                  height: 18,
                ),
                _howItWorksSection(),
                const SizedBox(
                  height: 50,
                ),
                _restrictions(),
                const SizedBox(
                  height: 50,
                ),
                _sendMessageSection(),
                const SizedBox(
                  height: 70,
                ),
                _chooseCertificateSection(),
                const SizedBox(
                  height: 50,
                ),
                _chooseAmount(),
                const SizedBox(
                  height: 60,
                ),
                _formDataSection(),
                const SizedBox(
                  height: 50,
                ),
                _paySection(),
                const SizedBox(
                  height: 46,
                ),
                _bottomButton(),
                const SizedBox(
                  height: 38,
                ),
                _bottomText(),
                const SizedBox(
                  height: 20,
                ),
              ],
            ),
          ),
        ),
      ],
    );
  }

  Widget _title1() {
    return const Text('–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤—ñ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏ –Ω–∞ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è –∫–≤–∞—Ä—Ç–∏—Ä–∏',
        textAlign: TextAlign.center,
        style: TextStyle(
            fontSize: 25,
            fontWeight: FontWeight.w700,
            fontFamily: AppFont.heavy,
            color: Color.fromRGBO(255, 255, 255, 1)));
  }

  Widget _title2() {
    return const Text('–ü—Ä–∏–±–∏—Ä–∞–Ω–Ω—è - —Ü–µ –∑–∞–≤–∂–¥–∏ —Ö–æ—Ä–æ—à–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫ üòâ',
        textAlign: TextAlign.center,
        style: TextStyle(
            fontSize: 19,
            fontWeight: FontWeight.w700,
            fontFamily: AppFont.heavy,
            color: Color.fromRGBO(252, 213, 40, 1)));
  }

  Widget _restrictions() {
    return DottedBorder(
        borderType: BorderType.RRect,
        radius: const Radius.circular(50),
        dashPattern: const [6, 6],
        color: const Color.fromRGBO(240, 240, 240, 1),
        // radius:  Radius.circular(50),
        child: ClipRRect(
          borderRadius: const BorderRadius.all(Radius.circular(50)),
          child: Container(
            padding: const EdgeInsets.symmetric(horizontal: 29, vertical: 16),
            child: const Text('–ù–µ —ñ—Å–Ω—É—î –æ–±–º–µ–∂–µ–Ω—å —â–æ–¥–æ —Ç–µ—Ä–º—ñ–Ω—É –¥—ñ—ó –ø—Ä–æ–º–æ-–∫–æ–¥—É',
                textAlign: TextAlign.center,
                style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.w500,
                    fontFamily: AppFont.heavy,
                    color: Color.fromRGBO(255, 255, 255, 1))),
          ),
        ));
  }

  Widget _sendMessageSection() {
    return Column(
      children: [
        const Text(
            '–Ø–∫—â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–µ–Ω —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç –Ω–∞ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–µ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è, —Ö—ñ–º—á–∏—Å—Ç–∫—É —á–∏ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è –ø—ñ—Å–ª—è —Ä–µ–º–æ–Ω—Ç—É, –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º',
            textAlign: TextAlign.center,
            style: TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.w400,
                fontFamily: AppFont.heavy,
                color: Color.fromRGBO(218, 218, 218, 1))),
        const SizedBox(
          height: 22,
        ),
        Row(
          children: const [
            Flexible(
              child: MessengerButton(
                title: 'telegram',
                uriPic: 'lib/assets/icons/telegram.svg',
              ),
            ),
            SizedBox(
              width: 4,
            ),
            Flexible(
              child: MessengerButton(
                title: 'messenger',
                uriPic: 'lib/assets/icons/messenger.svg',
              ),
            ),
            SizedBox(
              width: 4,
            ),
            Flexible(
              child: MessengerButton(
                title: 'whatsapp',
                uriPic: 'lib/assets/icons/whatsapp.svg',
              ),
            ),
          ],
        )
      ],
    );
  }

  Widget _howItWorksSection() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.center,
      children: [
        const Text('–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?',
            textAlign: TextAlign.center,
            style: TextStyle(
                fontSize: 19,
                fontWeight: FontWeight.w700,
                fontFamily: AppFont.heavy,
                color: Color.fromRGBO(255, 255, 255, 1))),
        const SizedBox(
          height: 10,
        ),
        Row(
          children: [
            Stack(
              alignment: Alignment.center,
              children: [
                Container(
                  height: 40,
                  width: 40,
                  decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(100)
                      //more than 50% of width makes circle
                      ),
                ),
                const Text('1',
                    style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.w700,
                        fontFamily: AppFont.heavy,
                        color: AppColor.primary))
              ],
            ),
            const SizedBox(
              width: 18,
            ),
            const Flexible(
              child: Text('–í–∏–±–µ—Ä—ñ—Ç—å —Å—É–º—É',
                  style: TextStyle(
                      fontSize: 19,
                      fontWeight: FontWeight.w700,
                      fontFamily: AppFont.heavy,
                      color: Color.fromRGBO(255, 255, 255, 1))),
            ),
          ],
        ),
        const SizedBox(
          height: 15,
        ),
        Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Stack(
              alignment: Alignment.center,
              children: [
                Container(
                  height: 40,
                  width: 40,
                  decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(100)
                      //more than 50% of width makes circle
                      ),
                ),
                const Text('2',
                    style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.w700,
                        fontFamily: AppFont.heavy,
                        color: AppColor.primary))
              ],
            ),
            const SizedBox(
              width: 18,
            ),
            const Flexible(
              child: Text(
                  '–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—ó –ø–æ—à—Ç–∏ —Ç–∞ / –∞–±–æ –Ω–æ–º–µ—Ä –æ—Å–æ–±–∏, —è–∫—ñ–π –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫',
                  style: TextStyle(
                      fontSize: 19,
                      fontWeight: FontWeight.w700,
                      fontFamily: AppFont.heavy,
                      color: Color.fromRGBO(255, 255, 255, 1))),
            ),
          ],
        ),
        const SizedBox(
          height: 15,
        ),
        Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Stack(
              alignment: Alignment.center,
              children: [
                Container(
                  height: 40,
                  width: 40,
                  decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(100)
                      //more than 50% of width makes circle
                      ),
                ),
                const Text('3',
                    style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.w700,
                        fontFamily: AppFont.heavy,
                        color: AppColor.primary))
              ],
            ),
            const SizedBox(
              width: 18,
            ),
            const Flexible(
              child: Text('–û–ø–ª–∞—á—É–π—Ç–µ –≤—Å–µ —á–µ—Ä–µ–∑ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç',
                  style: TextStyle(
                      fontSize: 19,
                      fontWeight: FontWeight.w700,
                      fontFamily: AppFont.heavy,
                      color: Color.fromRGBO(255, 255, 255, 1))),
            ),
          ],
        ),
        const SizedBox(
          height: 15,
        ),
        Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Stack(
              alignment: Alignment.center,
              children: [
                Container(
                  height: 40,
                  width: 40,
                  decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(100)
                      //more than 50% of width makes circle
                      ),
                ),
                const Text('4',
                    style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.w700,
                        fontFamily: AppFont.heavy,
                        color: AppColor.primary))
              ],
            ),
            const SizedBox(
              width: 18,
            ),
            const Flexible(
              child: Text(
                  '–õ—é–¥–∏–Ω–∞ –æ—Ç—Ä–∏–º—É—î —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–æ–¥ —ñ –º–æ–∂–µ –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –π–æ–≥–æ –Ω–∞ –Ω–∞—à–æ–º—É –≤–µ–±-—Å–∞–π—Ç—ñ —Ç–∞ –ø–æ–≤–Ω—ñ—Å—Ç—é –∞–±–æ —á–∞—Å—Ç–∫–æ–≤–æ –æ–ø–ª–∞—Ç–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É',
                  style: TextStyle(
                      fontSize: 19,
                      fontWeight: FontWeight.w700,
                      fontFamily: AppFont.heavy,
                      color: Color.fromRGBO(255, 255, 255, 1))),
            ),
          ],
        ),
        const SizedBox(
          height: 15,
        ),
        Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Stack(
              alignment: Alignment.center,
              children: [
                Container(
                  height: 40,
                  width: 40,
                  decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(100)
                      //more than 50% of width makes circle
                      ),
                ),
                const Text('5',
                    style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.w700,
                        fontFamily: AppFont.heavy,
                        color: AppColor.primary))
              ],
            ),
            const SizedBox(
              width: 18,
            ),
            const Flexible(
              child: Text(
                  '–õ–∏—Å—Ç —ñ —Å–º—Å –º—ñ—Å—Ç—è—Ç—å —É—Å—ñ –≤–∫–∞–∑—ñ–≤–∫–∏, –∞ —Ç–∞–∫–æ–∂ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞ –ø–æ–¥–∞—Ä—É–Ω–∫–∞',
                  style: TextStyle(
                      fontSize: 19,
                      fontWeight: FontWeight.w700,
                      fontFamily: AppFont.heavy,
                      color: Color.fromRGBO(255, 255, 255, 1))),
            ),
          ],
        ),
      ],
    );
  }

  Widget _chooseCertificateSection() {
    return Column(
      children: [
        const Text('–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç',
            textAlign: TextAlign.center,
            style: TextStyle(
                fontSize: 22,
                fontWeight: FontWeight.w600,
                fontFamily: AppFont.heavy,
                color: Color.fromRGBO(255, 255, 255, 1))),
        const SizedBox(
          height: 25,
        ),
        Consumer<PresentProvider>(
          builder: (context, provider, child) {
            return CustomGridView(
              padding: const EdgeInsets.only(top: 10),

              listWidget: provider.presentOptionsList(),
              onTap: (index) {
                provider.selectedCertificateId =
                    provider.presentDataList[index]['id'];
              },
            );
          },
        )
      ],
    );
  }

  Widget _chooseAmount() {
    return Consumer<PresentProvider>(
      builder: (context, provider, child) {
        return Column(
          children: [
            const Text('–∞–±–æ —Å–∞–º—ñ –≤–∫–∞–∂—ñ—Ç—å —Å—É–º—É',
                textAlign: TextAlign.center,
                style: TextStyle(
                    fontSize: 19,
                    fontWeight: FontWeight.w700,
                    fontFamily: AppFont.heavy,
                    color: Color.fromRGBO(255, 255, 255, 1))),
            const SizedBox(
              height: 17,
            ),
            Container(
              padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 15),
              decoration: BoxDecoration(
                  color: AppColor.presentUnSelected,
                  borderRadius:
                      BorderRadius.circular(AppValues.regularCornerRadius)),
              child: Column(
                children: [
                  const Text('–•–æ—á—É –∑—Ä–æ–±–∏—Ç–∏ –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –Ω–∞',
                      textAlign: TextAlign.center,
                      style: TextStyle(
                          fontSize: 18,
                          fontWeight: FontWeight.w700,
                          fontFamily: AppFont.heavy,
                          color: Color.fromRGBO(43, 43, 43, 1))),
                  const SizedBox(
                    height: 13,
                  ),
                  SizedBox(
                      child: Row(
                    children: [
                      Flexible(
                        child: CustomTextField(
                          controller: _cash,
                          focusNode: _cashNode,
                          fillColor: AppColor.presentUnSelected,
                          focusedBorderColor:
                              const Color.fromRGBO(119, 119, 119, 0.3),
                          enabledBorderColor:
                              const Color.fromRGBO(119, 119, 119, 0.3),
                          keyboardType: TextInputType.number,
                          onTyping: (x) {
                            provider.cashPresent = double.parse(_cash.text);
                          },
                        ),
                      ),
                    ],
                  )),
                  const SizedBox(
                    height: 17,
                  ),
                  const Text('PLN',
                      textAlign: TextAlign.center,
                      style: TextStyle(
                          fontSize: 18,
                          fontWeight: FontWeight.w700,
                          fontFamily: AppFont.heavy,
                          color: Color.fromRGBO(43, 43, 43, 1))),
                ],
              ),
            ),
          ],
        );
      },
    );
  }

  Widget _formDataSection() {
    return Consumer<PresentProvider>(
  builder: (context, provider, child) {
  return Container(
      color: Colors.white,
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 18),
        child: Column(
          children: [
            Row(
              children: [
                Expanded(
                  child: CustomTextField(
                      focusNode: _certEmailNode,
                      controller: _certEmail,
                      keyboardType: TextInputType.emailAddress,
                      prefixIcon:
                          SvgPicture.asset('lib/assets/icons/email 1.svg'),
                      fillColor: Colors.white,
                      contentPadding: const EdgeInsets.only(
                          left: 60, top: 8, bottom: 8, right: 16),
                      labelText: '–í–≤–µ–¥—ñ—Ç—å email, –∫—É–¥–∏ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç',
                      onTyping: (x) {

                        provider.emailCertificate=x;
                      }),
                ),
              ],
            ),
            const Divider(
              height: 1,
              thickness: 1,
            ),
            const SizedBox(
              height: 15,
            ),
            CustomTextField(
                focusNode: _certPhoneNode,
                controller: _certPhone,
                prefixIcon: const SelectPhone(),
                prefixPadding: 0.0,
                fillColor: Colors.white,
                keyboardType: TextInputType.phone,
                labelText: '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –Ω–∞ —è–∫–∏–π –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–¥',
                contentPadding: const EdgeInsets.only(
                    left: 120, top: 8, bottom: 8, right: 16),
                onTyping: (x) {
                  provider.phoneCertificate=x;
                }),
            const SizedBox(
              height: 15,
            ),
            const Divider(
              height: 1,
              thickness: 1,
            ),
            const SizedBox(
              height: 20,
            ),
            CustomTextField(
                focusNode: _additionalInfoNode,
                controller: _additionalInfo,
                textFieldHeight: 124,
                maxLines: 10,
                keyboardType: TextInputType.multiline,
                fillColor: Colors.white,
                prefixIcon: SvgPicture.asset('lib/assets/icons/text 1.svg'),
                prefixAlignment: Alignment.topLeft,
                contentPadding: const EdgeInsets.only(
                    left: 60, top: 8, bottom: 8, right: 16),
                labelText: '–°—É–ø—Ä–æ–≤—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç',
                onTyping: (x) {
                  provider.descriptionCertificate=x;
                }),
            const Divider(
              height: 1,
              thickness: 1,
            ),
            const SizedBox(
              height: 15,
            ),
            Row(
              children: [
                Expanded(
                  child: CustomTextField(
                      focusNode: _yourEmailNode,
                      controller: _yourEmail,
                      keyboardType: TextInputType.emailAddress,
                      prefixIcon:
                          SvgPicture.asset('lib/assets/icons/email 1.svg'),
                      fillColor: Colors.white,
                      contentPadding: const EdgeInsets.only(
                          left: 60, top: 8, bottom: 8, right: 16),
                      labelText: '–ïmail –∞–¥—Ä–µ—Å–∞',
                      onTyping: (x) {
                        provider.yourEmail=x;
                      }),
                ),
              ],
            ),
            const Divider(
              height: 1,
              thickness: 1,
            ),
            const SizedBox(
              height: 15,
            ),
            CustomTextField(
                focusNode: _yourPhoneNode,
                controller: _yourPhone,
                prefixIcon: const SelectPhone(),
                prefixPadding: 0.0,
                fillColor: Colors.white,
                keyboardType: TextInputType.phone,
                labelText: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω',
                contentPadding: const EdgeInsets.only(
                    left: 120, top: 8, bottom: 8, right: 16),
                onTyping: (x) {
                  provider.yourPhone=x;
                }),
          ],
        ),
      ),
    );
  },
);
  }

  Widget _paySection() {
    return Consumer<PresentProvider>(
  builder: (context, provider, child) {
  return Container(
      child: Column(
        children: [
          SvgPicture.asset(
            'lib/assets/icons/card (1) 1.svg',
            height: 62,
          ),
          const SizedBox(
            height: 25,
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: const [
              Flexible(
                child: Text(
                  '–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–∫–æ—é online',
                  textAlign: TextAlign.center,
                  style: TextStyle(
                      fontSize: 16,
                      fontFamily: AppFont.heavy,
                      fontWeight: FontWeight.w600,
                      color: Color.fromRGBO(255, 255, 255, 1)),
                ),
              ),
            ],
          ),
          const SizedBox(
            height: 23,
          ),
          InkWell(
            onTap: (){provider.isCheckedContract= !provider.isCheckedContract;},
            child: Row(
              children: [
                SvgPicture.asset(
                  'lib/assets/icons/vector2.svg',
                  color:  provider.isCheckedContract? Color.fromRGBO(255, 255, 255, 1):Color.fromRGBO(189, 71, 64, 1),
                ),
                const SizedBox(
                  width: 18,
                ),
                Expanded(
                  child: RichText(
                    text:   TextSpan(
                      children: [
                        TextSpan(
                          text: '–ü–æ–≥–æ–¥–∂—É—é—Å—è –∑ ',
                          style: TextStyle(
                              fontSize: 18,
                              fontFamily: AppFont.heavy,
                              fontWeight: FontWeight.w500,
                              color:provider.isCheckedContract? Color.fromRGBO(255, 255, 255, 1):Color.fromRGBO(189, 71, 64, 1)),
                        ),
                        TextSpan(
                          text: '–ø—É–±–ª—ñ—á–Ω–∏–º –¥–æ–≥–æ–≤–æ—Ä–æ–º',
                          style: TextStyle(
                              fontSize: 18,
                              fontFamily: AppFont.heavy,
                              fontWeight: FontWeight.w500,
                              color:provider.isCheckedContract? Color.fromRGBO(255, 255, 255, 1):Color.fromRGBO(189, 71, 64, 1),
                              decoration:
                                  TextDecoration.underline), //<-- SEE HERE
                        ),
                      ],
                    ),
                  ),
                )
              ],
            ),
          ),
        ],
      ),
    );
  },
);
  }

  Widget _bottomButton() {
    return CustomButton(
      height: 72,
      enabledColor: const Color.fromRGBO(255, 234, 132, 1),
      text: '–û—Ñ–æ—Ä–º–∏—Ç–∏ –ø–æ–¥–∞—Ä—É–Ω–æ–∫',
      textStyle: const TextStyle(
          fontSize: 18,
          fontWeight: FontWeight.w500,
          fontFamily: AppFont.heavy,
          color: Color.fromRGBO(0, 0, 0, 1)),
      onTap: () {},
    );
  }

  Widget _bottomText() {
    return const Text(
      '–Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Å—é—Ä–ø—Ä–∏–∑, –∑–∞–ª–∏—à—Ç–µ —Å–≤–æ—é –ø–æ—à—Ç—É —Ç–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –æ—Ç—Ä–∏–º–∞–π—Ç–µ –∫–æ–¥ –æ—Å–æ–±–∏—Å—Ç–æ, –∞ –ø–æ—Ç—ñ–º –ø–µ—Ä–µ–¥–∞–π—Ç–µ –π–æ–≥–æ.',
      textAlign: TextAlign.center,
      style: TextStyle(
          fontSize: 18,
          fontWeight: FontWeight.w400,
          fontFamily: AppFont.heavy,
          color: Color.fromRGBO(255, 255, 255, 1)),
    );
  }
}
